{"ast":null,"code":"import _regeneratorRuntime from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/j.wright/SF-main-repo/alchemist-app/client/src/components/modal/mediator.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport workItemAPI from '../../workItemAPI';\nimport View from './view';\nimport PubSub from '../../pubSub';\nimport Button from '../button/button';\nimport ButtonIcon from '../buttonIcon/buttonIcon';\nimport Icon from '../icon/view';\nimport { icons } from '../iconList/iconList';\nimport TweenMax, { Back } from 'gsap';\n\nvar Modal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this));\n\n    _this.HandleModalUIState = function (config) {\n      var modalAction = {\n        'SHOW_MODAL': {\n          visibility: true,\n          data: config.actionConfig\n        },\n        'HIDE_MODAL': {\n          visibility: false,\n          data: null\n        }\n      };\n\n      _this.setState(function (state) {\n        return {\n          visibility: modalAction[config.actionType].visibility,\n          modalData: modalAction[config.actionType].data\n        };\n      });\n    };\n\n    _this.animateIn = function () {\n      var main = document.querySelector('.main');\n      var modal = document.querySelector('.modal');\n      _this.modalDOMNode = modal;\n\n      var runGsap = function runGsap() {\n        TweenMax.to(modal, .4, {\n          autoAlpha: 1,\n          transform: \"translateY(0)\",\n          delay: 0,\n          ease: Back.easeOut.config(1.7)\n        });\n        main.removeEventListener(\"transitionend\", runGsap);\n      };\n\n      if (_this.props.history.action === \"PUSH\") {\n        main.addEventListener(\"transitionend\", runGsap);\n      } else {\n        runGsap();\n      }\n    };\n\n    _this.animateOut = function (hideModalCall) {\n      TweenMax.to(_this.modalDOMNode, .4, {\n        autoAlpha: 0,\n        transform: \"translateY(-10%)\",\n        onComplete: hideModalCall,\n        delay: 0,\n        ease: Back.easeIn.config(1.7)\n      });\n    };\n\n    _this.handleClick = function () {\n      var hideModal = function hideModal() {\n        var config = {\n          actionType: 'HIDE_MODAL',\n          actionConfig: {}\n        };\n        PubSub.fire('toggleModal', config);\n\n        _this.props.history.goBack();\n      };\n\n      _this.animateOut(hideModal);\n    };\n\n    _this.state = {\n      visibility: false,\n      modalData: ''\n    };\n    _this.modalDOMNode = '';\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var resolveAPIPromise =\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var data, modalConfig;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return workItemAPI.getSingleItem(_this2.props.match.params.id);\n\n                case 2:\n                  data = _context.sent;\n                  modalConfig = {\n                    actionType: 'SHOW_MODAL',\n                    actionConfig: {\n                      workItem: data\n                    }\n                  };\n\n                  _this2.HandleModalUIState(modalConfig);\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function resolveAPIPromise() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      resolveAPIPromise();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var modalConfig = {\n        actionType: 'HIDE_MODAL',\n        actionConfig: {}\n      };\n      PubSub.fire('toggleModal', modalConfig);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var modalConfig = {\n        actionType: 'SHOW_MODAL',\n        actionConfig: {}\n      };\n      PubSub.fire('toggleModal', modalConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.visibility) {\n        var getViewData = function getViewData() {\n          var viewData = {};\n          viewData.workItem = _this3.state.modalData.workItem;\n          viewData.imageSrc = viewData.workItem.images.hidpi ? viewData.workItem.images.hidpi : viewData.workItem.images.normal;\n          viewData.workItemTags = [];\n\n          for (var i = 0; i < viewData.workItem.tags.length; i++) {\n            viewData.workItemTags.push(React.createElement(\"i\", {\n              key: [i],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }, viewData.workItem.tags[i]));\n          }\n\n          viewData.datePublished = new Date(viewData.workItem.published_at).toDateString();\n          return viewData;\n        };\n\n        var viewData = getViewData();\n        var closeButton = React.createElement(Button, {\n          onClick: this.handleClick,\n          label: \"Close\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        });\n        var closeButtonIcon = React.createElement(ButtonIcon, {\n          focus: true,\n          onClick: this.handleClick,\n          title: \"Close Modal\",\n          icon: React.createElement(Icon, {\n            icon: icons.close,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        });\n        return React.createElement(View, Object.assign({}, viewData, {\n          animateInCall: this.animateIn,\n          modalData: this.state.modalData,\n          closeModal: this.handleClick,\n          buttonIcon: closeButtonIcon,\n          button: closeButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\nexport default withRouter(Modal);","map":{"version":3,"sources":["/Users/j.wright/SF-main-repo/alchemist-app/client/src/components/modal/mediator.js"],"names":["React","Component","withRouter","workItemAPI","View","PubSub","Button","ButtonIcon","Icon","icons","TweenMax","Back","Modal","HandleModalUIState","config","modalAction","visibility","data","actionConfig","setState","state","actionType","modalData","animateIn","main","document","querySelector","modal","modalDOMNode","runGsap","to","autoAlpha","transform","delay","ease","easeOut","removeEventListener","props","history","action","addEventListener","animateOut","hideModalCall","onComplete","easeIn","handleClick","hideModal","fire","goBack","resolveAPIPromise","getSingleItem","match","params","id","modalConfig","workItem","getViewData","viewData","imageSrc","images","hidpi","normal","workItemTags","i","tags","length","push","datePublished","Date","published_at","toDateString","closeButton","closeButtonIcon","close"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { withRouter } from \"react-router\";\nimport workItemAPI from '../../workItemAPI';\nimport View from './view';\nimport PubSub from '../../pubSub';\nimport Button from '../button/button';\nimport ButtonIcon from '../buttonIcon/buttonIcon';\nimport Icon from '../icon/view';\nimport { icons } from '../iconList/iconList';\n\nimport TweenMax, { Back } from 'gsap';\n\nclass Modal extends Component{\n  constructor(){\n    super();\n    this.state = {\n        visibility:false,\n        modalData: ''\n      }\n    this.modalDOMNode = '';\n  }\n  \n  componentWillMount(){\n    const resolveAPIPromise = async () => {\n      let data = await workItemAPI.getSingleItem(this.props.match.params.id);\n      let modalConfig = {\n        actionType: 'SHOW_MODAL',\n        actionConfig: {\n          workItem: data\n        }\n      };\n      this.HandleModalUIState(modalConfig);\n    }\n    resolveAPIPromise();\n  }\n\n  componentWillUnmount(){\n    let modalConfig = {\n      actionType: 'HIDE_MODAL',\n      actionConfig: {}\n    };\n    PubSub.fire('toggleModal', modalConfig);\n  }\n\n  componentDidMount(){\n    let modalConfig = {\n      actionType: 'SHOW_MODAL',\n      actionConfig: {}\n    };\n    PubSub.fire('toggleModal', modalConfig);\n  }\n\n  \n\n  HandleModalUIState = (config) => {\n    const modalAction = {\n      'SHOW_MODAL': {\n        visibility: true,\n        data: config.actionConfig\n      },\n      'HIDE_MODAL': {\n        visibility: false,\n        data: null,\n      }\n    };\n    this.setState((state) => {\n      return {\n        visibility: modalAction[config.actionType].visibility,\n        modalData: modalAction[config.actionType].data\n      }\n    });\n  }\n\n  animateIn = () => {\n    const main = document.querySelector('.main');\n    const modal = document.querySelector('.modal');\n    this.modalDOMNode = modal;\n    const runGsap = () => {\n      TweenMax.to(modal, .4, {autoAlpha:1, transform: \"translateY(0)\",  delay:0, ease: Back.easeOut.config(1.7)});\n      main.removeEventListener(\"transitionend\", runGsap);\n    }\n    if(this.props.history.action === \"PUSH\"){\n      main.addEventListener(\"transitionend\", runGsap);\n    } else{\n      runGsap();\n    }\n    \n  }\n\n\n  animateOut = (hideModalCall) => {\n    TweenMax.to(this.modalDOMNode, .4, {autoAlpha:0, transform: \"translateY(-10%)\", onComplete:hideModalCall, delay:0, ease: Back.easeIn.config(1.7)});\n  }\n\n  handleClick = () => {\n    const hideModal = () => {\n      let config = {\n        actionType: 'HIDE_MODAL',\n        actionConfig: {}\n      };\n      PubSub.fire('toggleModal', config);\n      this.props.history.goBack();\n    }\n    this.animateOut(hideModal);\n  }\n\n  render(){\n    \n    if(this.state.visibility){\n      const getViewData = () => {\n        let viewData = {};\n        viewData.workItem = this.state.modalData.workItem;\n        viewData.imageSrc = viewData.workItem.images.hidpi ? viewData.workItem.images.hidpi : viewData.workItem.images.normal;\n        viewData.workItemTags = [];\n        for(let i = 0;i < viewData.workItem.tags.length; i++){\n          viewData.workItemTags.push(<i key={[i]}>{viewData.workItem.tags[i]}</i>);\n        }\n        viewData.datePublished = new Date(viewData.workItem.published_at).toDateString();\n        return viewData;\n      }\n      const viewData = getViewData();\n      const closeButton = <Button onClick={this.handleClick} label=\"Close\"/>;\n      const closeButtonIcon = <ButtonIcon focus={true} onClick={this.handleClick} title=\"Close Modal\" icon={<Icon icon={icons.close}/>}/>;\n      return (\n        <View {...viewData} \n          animateInCall={this.animateIn} \n          modalData={this.state.modalData} \n          closeModal={this.handleClick} \n          buttonIcon={closeButtonIcon} \n          button={closeButton}/>\n      );\n    }else{\n      return null;\n    }    \n  }\n  \n}\nexport default withRouter(Modal);\n"]},"metadata":{},"sourceType":"module"}