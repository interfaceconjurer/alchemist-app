{"ast":null,"code":"import _classCallCheck from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/j.wright/SF-main-repo/alchemist-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/j.wright/SF-main-repo/alchemist-app/client/src/components/workItem/workItem.js\";\nimport React, { Component } from 'react';\nimport './workItem.css';\nimport LazyImage from \"../lazyImage/vew\";\n\nvar WorkItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WorkItem, _Component);\n\n  function WorkItem() {\n    var _this;\n\n    _classCallCheck(this, WorkItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorkItem).call(this));\n\n    _this.handleClick = function () {\n      _this.props.workItemClick(_this.props.workItem);\n    };\n\n    _this.handleLoad = function () {\n      _this.setState({\n        workItemImageLoaded: true\n      });\n    };\n\n    _this.getLoadingState = function () {\n      if (!_this.state.workItemImageLoaded) {\n        return React.createElement(\"article\", {\n          className: \"loading-work-state\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"big-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"small-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"electron-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        })));\n      }\n    };\n\n    _this.handleInput = function (event) {\n      var needsAnimationToggle = !!(_this.props.animatedGif && _this.props.stillImage);\n      var needsFocus = event.type === 'focus' || event.type === 'mouseover';\n      var needsBlur = event.type === 'blur' || event.type === 'mouseout';\n\n      if (needsFocus && needsAnimationToggle) {\n        _this.refs.domButton.classList.add('isFocused');\n\n        _this.imageElement.src = _this.props.animatedGif;\n      } else if (needsBlur && needsAnimationToggle) {\n        _this.refs.domButton.classList.remove('isFocused');\n\n        _this.imageElement.src = _this.props.stillImage;\n      }\n\n      if (event.keyCode === 13 || event.keyCode === 32) {\n        event.target.click();\n      }\n    };\n\n    _this.state = {\n      workItemImageLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(WorkItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"li\", {\n        key: this.props.workItem.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.getLoadingState(), React.createElement(\"button\", {\n        ref: \"domButton\",\n        className: \"buttonId-\".concat(this.props.workItem.id) + (this.props.animatedGif ? ' hasAnimation' : ''),\n        onMouseOver: this.handleInput,\n        onMouseOut: this.handleInput,\n        onFocus: this.handleInput,\n        onBlur: this.handleInput,\n        onKeyUp: this.handleInput,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(LazyImage, {\n        imageElement: function imageElement(node) {\n          return _this2.imageElement = node;\n        },\n        animatedGif: this.props.animatedGif,\n        stillImage: this.props.stillImage,\n        onLoad: this.handleLoad,\n        alt: this.props.workItem.description,\n        src: this.props.imageSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return WorkItem;\n}(Component);\n\nexport default WorkItem;","map":{"version":3,"sources":["/Users/j.wright/SF-main-repo/alchemist-app/client/src/components/workItem/workItem.js"],"names":["React","Component","LazyImage","WorkItem","handleClick","props","workItemClick","workItem","handleLoad","setState","workItemImageLoaded","getLoadingState","state","handleInput","event","needsAnimationToggle","animatedGif","stillImage","needsFocus","type","needsBlur","refs","domButton","classList","add","imageElement","src","remove","keyCode","target","click","toString","id","node","description","imageSrc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './workItem.css';\nimport LazyImage from \"../lazyImage/vew\";\n\n\nclass WorkItem extends Component {\n  constructor(){\n    super();\n    this.state = {\n      workItemImageLoaded: false\n    }\n  }\n\n  handleClick = () => {\n    this.props.workItemClick(this.props.workItem);\n  }\n\n  handleLoad = () => {\n    this.setState({ workItemImageLoaded: true });\n  }\n\n  getLoadingState = () => {\n    if(!this.state.workItemImageLoaded){\n      return <article className=\"loading-work-state\">\n                <span className=\"big-circle\">\n                  <span className=\"small-circle\"></span>\n                  <span className=\"electron-circle\"></span>\n                </span>\n              </article>;\n    } \n  }\n\n  handleInput = (event) => {\n    let needsAnimationToggle = !!(this.props.animatedGif && this.props.stillImage);\n    let needsFocus = event.type === 'focus' || event.type === 'mouseover';\n    let needsBlur = event.type === 'blur' || event.type === 'mouseout';\n    if(needsFocus && needsAnimationToggle){\n      this.refs.domButton.classList.add('isFocused');\n      this.imageElement.src = this.props.animatedGif\n    } else if(needsBlur && needsAnimationToggle){\n      this.refs.domButton.classList.remove('isFocused');\n      this.imageElement.src = this.props.stillImage\n    }\n    if(event.keyCode === 13 || event.keyCode === 32){\n      event.target.click();\n    }\n  }\n\n  render() {\n    return(\n      <li key={this.props.workItem.toString()}>\n        {this.getLoadingState()}\n        <button \n          ref=\"domButton\"\n          className={`buttonId-${this.props.workItem.id}` + (this.props.animatedGif ? ' hasAnimation' : '')} \n          onMouseOver={this.handleInput} \n          onMouseOut={this.handleInput} \n          onFocus={this.handleInput} \n          onBlur={this.handleInput} \n          onKeyUp={this.handleInput} onClick={this.handleClick}>\n          <LazyImage \n            imageElement={node => this.imageElement = node} \n            animatedGif={this.props.animatedGif} \n            stillImage={this.props.stillImage} \n            onLoad={this.handleLoad} \n            alt={this.props.workItem.description} \n            src={this.props.imageSrc} />\n        </button>\n      </li>\n    );\n  } \n}\nexport default WorkItem;"]},"metadata":{},"sourceType":"module"}