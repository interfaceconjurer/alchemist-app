{"ast":null,"code":"import isActiveElement from '../is/active-element';\nimport queryTabsequence from '../query/tabsequence';\nimport whenKey from '../when/key';\nexport default function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      context = _ref.context;\n\n  if (!context) {\n    context = document.documentElement;\n  } // Make sure the supports tests are run before intercepting the Tab key,\n  // or IE10 and IE11 will fail to process the first Tab key event. Not\n  // limiting this warm-up to IE because it may be a problem elsewhere, too.\n\n\n  queryTabsequence();\n  return whenKey({\n    // Safari on OSX may require ALT+TAB to reach links,\n    // see https://github.com/medialize/ally.js/issues/146\n    '?alt+?shift+tab': function altShiftTab(event) {\n      // we're completely taking over the Tab key handling\n      event.preventDefault();\n      var sequence = queryTabsequence({\n        context: context\n      });\n      var backward = event.shiftKey;\n      var first = sequence[0];\n      var last = sequence[sequence.length - 1]; // wrap around first to last, last to first\n\n      var source = backward ? first : last;\n      var target = backward ? last : first;\n\n      if (isActiveElement(source)) {\n        target.focus();\n        return;\n      } // find current position in tabsequence\n\n\n      var currentIndex;\n      var found = sequence.some(function (element, index) {\n        if (!isActiveElement(element)) {\n          return false;\n        }\n\n        currentIndex = index;\n        return true;\n      });\n\n      if (!found) {\n        // redirect to first as we're not in our tabsequence\n        first.focus();\n        return;\n      } // shift focus to previous/next element in the sequence\n\n\n      var offset = backward ? -1 : 1;\n      sequence[currentIndex + offset].focus();\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}