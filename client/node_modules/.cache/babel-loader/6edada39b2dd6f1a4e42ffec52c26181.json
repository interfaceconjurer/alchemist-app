{"ast":null,"code":"// this is a shared utility file for focus-relevant.js and tabbable.js\n// separate testing of this file's functions is not necessary,\n// as they're implicitly tested by way of the consumers\nexport function isUserModifyWritable(style) {\n  // https://www.w3.org/TR/1999/WD-css3-userint-19990916#user-modify\n  // https://github.com/medialize/ally.js/issues/17\n  var userModify = style.webkitUserModify || '';\n  return Boolean(userModify && userModify.indexOf('write') !== -1);\n}\nexport function hasCssOverflowScroll(style) {\n  return [style.getPropertyValue('overflow'), style.getPropertyValue('overflow-x'), style.getPropertyValue('overflow-y')].some(function (overflow) {\n    return overflow === 'auto' || overflow === 'scroll';\n  });\n}\nexport function hasCssDisplayFlex(style) {\n  return style.display.indexOf('flex') > -1;\n}\nexport function isScrollableContainer(element, nodeName, parentNodeName, parentStyle) {\n  if (nodeName !== 'div' && nodeName !== 'span') {\n    // Internet Explorer advances scrollable containers and bodies to focusable\n    // only if the scrollable container is <div> or <span> - this does *not*\n    // happen for <section>, <article>, â€¦\n    return false;\n  }\n\n  if (parentNodeName && parentNodeName !== 'div' && parentNodeName !== 'span' && !hasCssOverflowScroll(parentStyle)) {\n    return false;\n  }\n\n  return element.offsetHeight < element.scrollHeight || element.offsetWidth < element.scrollWidth;\n}","map":null,"metadata":{},"sourceType":"module"}