{"ast":null,"code":"// NOTE: this selector MUST *never* be used directly,\n// always go through query/focusable or is/focusable.js\n// there are too many edge cases that they could be covered in\n// a simple CSS selectorâ€¦\nimport selectInShadows from '../util/select-in-shadows';\nimport _supports from '../supports/supports';\nvar supports;\nvar selector;\nexport default function () {\n  if (!supports) {\n    supports = _supports();\n  }\n\n  if (typeof selector === 'string') {\n    return selector;\n  } // https://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute\n\n\n  selector = '' // IE11 supports.can focus <table> and <td>\n  + (supports.focusTable ? 'table, td,' : '') // IE11 supports.can focus <fieldset>\n  + (supports.focusFieldset ? 'fieldset,' : '') // Namespace problems of [xlink:href] explained in https://stackoverflow.com/a/23047888/515124\n  // svg a[*|href] does not match in IE9, but since we're filtering\n  // through is/focusable we can include all <a> from SVG\n  + 'svg a,' // may behave as 'svg, svg *,' in chrome as *every* svg element with a focus event listener is focusable\n  // navigational elements\n  + 'a[href],' // validity determined by is/valid-area.js\n  + 'area[href],' // validity determined by is/disabled.js\n  + 'input, select, textarea, button,' // browsing context containers\n  + 'iframe, object, embed,' // interactive content\n  + 'keygen,' + (supports.focusAudioWithoutControls ? 'audio,' : 'audio[controls],') + (supports.focusVideoWithoutControls ? 'video,' : 'video[controls],') + (supports.focusSummary ? 'summary,' : '') // validity determined by is/valid-tabindex.js\n  + '[tabindex],' // editing hosts\n  + '[contenteditable]'; // where ShadowDOM is supported, we also want the shadowed focusable elements (via \">>>\" or \"/deep/\")\n\n  selector = selectInShadows(selector);\n  return selector;\n}","map":null,"metadata":{},"sourceType":"module"}