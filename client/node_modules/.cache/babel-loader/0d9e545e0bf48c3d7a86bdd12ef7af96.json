{"ast":null,"code":"import _regeneratorRuntime from \"/Users/j.wright/SF-main-repo/alchemist-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/j.wright/SF-main-repo/alchemist-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var workItemAPI = {\n  workItemData: [],\n  _fetchData: function () {\n    var _fetchData2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data, key, url, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.workItemData.length === 0)) {\n                _context.next = 12;\n                break;\n              }\n\n              key = '5cecd738e40e30f52442e8753d4cd5f05148782252c87c63c62101f24fd3d6fa';\n              url = 'https://api.dribbble.com/v2/user/shots?page=1&per_page=100';\n              _context.next = 5;\n              return fetch(url + '&access_token=' + key);\n\n            case 5:\n              response = _context.sent;\n              _context.next = 8;\n              return response.json();\n\n            case 8:\n              data = _context.sent;\n              this.workItemData = data;\n              _context.next = 13;\n              break;\n\n            case 12:\n              data = this.workItemData;\n\n            case 13:\n              return _context.abrupt(\"return\", data);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function _fetchData() {\n      return _fetchData2.apply(this, arguments);\n    }\n\n    return _fetchData;\n  }(),\n  _findItem: function _findItem(workItemData, id) {\n    var data;\n    workItemData.forEach(function (workItem, index) {\n      if (workItem.id.toString() === id) {\n        data = workItem;\n      }\n    });\n    return data;\n  },\n  getAllWorkItems: function () {\n    var _getAllWorkItems = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this._fetchData();\n\n            case 2:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getAllWorkItems() {\n      return _getAllWorkItems.apply(this, arguments);\n    }\n\n    return getAllWorkItems;\n  }(),\n  getSingleItem: function () {\n    var _getSingleItem = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(id) {\n      var data, allData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(this.workItemData.length > 0)) {\n                _context3.next = 4;\n                break;\n              }\n\n              data = this._findItem(this.workItemData, id);\n              _context3.next = 8;\n              break;\n\n            case 4:\n              _context3.next = 6;\n              return this._fetchData();\n\n            case 6:\n              allData = _context3.sent;\n              data = this._findItem(allData, id);\n\n            case 8:\n              return _context3.abrupt(\"return\", data);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function getSingleItem(_x) {\n      return _getSingleItem.apply(this, arguments);\n    }\n\n    return getSingleItem;\n  }()\n};\nexport default workItemAPI;","map":{"version":3,"sources":["/Users/j.wright/SF-main-repo/alchemist-app/src/workItemAPI.js"],"names":["workItemAPI","workItemData","_fetchData","length","key","url","fetch","response","json","data","_findItem","id","forEach","workItem","index","toString","getAllWorkItems","getSingleItem","allData"],"mappings":";;AAAA,OAAO,IAAMA,WAAW,GAAG;AACzBC,EAAAA,YAAY,EAAE,EADW;AAEzBC,EAAAA,UAAU;AAAA;AAAA;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEP,KAAKD,YAAL,CAAkBE,MAAlB,KAA6B,CAFtB;AAAA;AAAA;AAAA;;AAGFC,cAAAA,GAHE,GAGI,kEAHJ;AAIFC,cAAAA,GAJE,GAII,4DAJJ;AAAA;AAAA,qBAKeC,KAAK,CAACD,GAAG,GAAG,gBAAN,GAAyBD,GAA1B,CALpB;;AAAA;AAKFG,cAAAA,QALE;AAAA;AAAA,qBAMKA,QAAQ,CAACC,IAAT,EANL;;AAAA;AAMRC,cAAAA,IANQ;AAOR,mBAAKR,YAAL,GAAoBQ,IAApB;AAPQ;AAAA;;AAAA;AASRA,cAAAA,IAAI,GAAG,KAAKR,YAAZ;;AATQ;AAAA,+CAWHQ,IAXG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAFe;AAgBzBC,EAAAA,SAAS,EAAE,mBAAST,YAAT,EAAuBU,EAAvB,EAA0B;AACnC,QAAIF,IAAJ;AACAR,IAAAA,YAAY,CAACW,OAAb,CAAqB,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACxC,UAAGD,QAAQ,CAACF,EAAT,CAAYI,QAAZ,OAA2BJ,EAA9B,EAAiC;AAC/BF,QAAAA,IAAI,GAAGI,QAAP;AACD;AAAC,KAHJ;AAIA,WAAOJ,IAAP;AACD,GAvBwB;AAyBzBO,EAAAA,eAAe;AAAA;AAAA;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE,KAAKd,UAAL,EADF;;AAAA;AACXO,cAAAA,IADW;AAAA,gDAERA,IAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAzBU;AA8BzBQ,EAAAA,aAAa;AAAA;AAAA;AAAA,6BAAE,kBAAeN,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEV,KAAKV,YAAL,CAAkBE,MAAlB,GAA2B,CAFjB;AAAA;AAAA;AAAA;;AAGXM,cAAAA,IAAI,GAAG,KAAKC,SAAL,CAAe,KAAKT,YAApB,EAAkCU,EAAlC,CAAP;AAHW;AAAA;;AAAA;AAAA;AAAA,qBAKS,KAAKT,UAAL,EALT;;AAAA;AAKPgB,cAAAA,OALO;AAMXT,cAAAA,IAAI,GAAG,KAAKC,SAAL,CAAeQ,OAAf,EAAwBP,EAAxB,CAAP;;AANW;AAAA,gDAQNF,IARM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA9BY,CAApB;AA0CP,eAAeT,WAAf","sourcesContent":["export const workItemAPI = {\n  workItemData: [],\n  _fetchData: async function(){\n    let data;\n    if(this.workItemData.length === 0){\n      const key = '5cecd738e40e30f52442e8753d4cd5f05148782252c87c63c62101f24fd3d6fa'\n      const url = 'https://api.dribbble.com/v2/user/shots?page=1&per_page=100';\n      const response = await fetch(url + '&access_token=' + key);\n      data = await response.json();\n      this.workItemData = data;\n    } else{\n      data = this.workItemData;\n    }\n    return data;\n  },\n\n  _findItem: function(workItemData, id){\n    let data;\n    workItemData.forEach((workItem, index) => {\n      if(workItem.id.toString() === id){\n        data = workItem;\n      }});\n    return data;\n  },\n\n  getAllWorkItems: async function(){\n    let data = await this._fetchData();\n    return data;\n  },\n\n  getSingleItem: async function(id){\n    let data;\n    if(this.workItemData.length > 0){\n      data = this._findItem(this.workItemData, id);\n    } else {\n      let allData = await this._fetchData();\n      data = this._findItem(allData, id); \n    }\n    return data;\n  }\n}\n\nexport default workItemAPI;"]},"metadata":{},"sourceType":"module"}