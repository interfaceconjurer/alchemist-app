{"ast":null,"code":"import contextToElement from '../util/context-to-element';\nimport getDocument from '../util/get-document'; // see https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter\n\nvar filter = function filter(node) {\n  if (node.shadowRoot) {\n    return NodeFilter.FILTER_ACCEPT;\n  }\n\n  return NodeFilter.FILTER_SKIP;\n}; // IE requires a function, Browsers require {acceptNode: function}\n// see http://www.bennadel.com/blog/2607-finding-html-comment-nodes-in-the-dom-using-treewalker.htm\n\n\nfilter.acceptNode = filter;\nexport default function queryShadowHosts() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      context = _ref.context;\n\n  var element = contextToElement({\n    label: 'query/shadow-hosts',\n    resolveDocument: true,\n    defaultToDocument: true,\n    context: context\n  });\n\n  var _document = getDocument(context); // see https://developer.mozilla.org/en-US/docs/Web/API/Document/createTreeWalker\n\n\n  var walker = _document.createTreeWalker( // root element to start search in\n  element, // element type filter\n  NodeFilter.SHOW_ELEMENT, // custom NodeFilter filter\n  filter, // deprecated, but IE requires it\n  false);\n\n  var list = [];\n\n  if (element.shadowRoot) {\n    // TreeWalker does not run the filter on the context element\n    list.push(element);\n    list = list.concat(queryShadowHosts({\n      context: element.shadowRoot\n    }));\n  }\n\n  while (walker.nextNode()) {\n    list.push(walker.currentNode);\n    list = list.concat(queryShadowHosts({\n      context: walker.currentNode.shadowRoot\n    }));\n  }\n\n  return list;\n}","map":null,"metadata":{},"sourceType":"module"}