{"ast":null,"code":"// Determine if an element supports the disabled attribute\nimport contextToElement from '../util/context-to-element';\nimport _supports from '../supports/supports';\nvar supports; // https://www.w3.org/TR/html5/disabled-elements.html#concept-element-disabled\n\nvar disabledElementsPattern;\nvar disabledElements = {\n  input: true,\n  select: true,\n  textarea: true,\n  button: true,\n  fieldset: true,\n  form: true\n};\nexport default function (context) {\n  if (!supports) {\n    supports = _supports();\n\n    if (supports.focusFieldsetDisabled) {\n      delete disabledElements.fieldset;\n    }\n\n    if (supports.focusFormDisabled) {\n      delete disabledElements.form;\n    }\n\n    disabledElementsPattern = new RegExp('^(' + Object.keys(disabledElements).join('|') + ')$');\n  }\n\n  var element = contextToElement({\n    label: 'is/native-disabled-supported',\n    context: context\n  });\n  var nodeName = element.nodeName.toLowerCase();\n  return Boolean(disabledElementsPattern.test(nodeName));\n}","map":null,"metadata":{},"sourceType":"module"}