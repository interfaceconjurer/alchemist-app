{"ast":null,"code":"import cssEscape from 'css.escape';\nimport getDocument from '../util/get-document';\nexport function getMapByName(name, _document) {\n  // apparently getElementsByName() also considers id attribute in IE & opera\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n  var map = _document.querySelector('map[name=\"' + cssEscape(name) + '\"]');\n\n  return map || null;\n}\nexport function getMapOfImage(element) {\n  var usemap = element.getAttribute('usemap');\n\n  if (!usemap) {\n    return null;\n  }\n\n  var _document = getDocument(element);\n\n  return getMapByName(usemap.slice(1), _document);\n}\nexport function getImageOfArea(element) {\n  var map = element.parentElement;\n\n  if (!map.name || map.nodeName.toLowerCase() !== 'map') {\n    return null;\n  } // NOTE: image maps can also be applied to <object> with image content,\n  // but no browser supports this at the moment\n  // HTML5 specifies HTMLMapElement.images to be an HTMLCollection of all\n  // <img> and <object> referencing the <map> element, but no browser implements this\n  //   https://www.w3.org/TR/html5/embedded-content-0.html#the-map-element\n  //   https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n  // the image must be valid and loaded for the map to take effect\n\n\n  var _document = getDocument(element);\n\n  return _document.querySelector('img[usemap=\"#' + cssEscape(map.name) + '\"]') || null;\n}","map":null,"metadata":{},"sourceType":"module"}